#!/usr/bin/env python3
"""
Test script to demonstrate system tray integration
"""
import sys
import os
from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QTimer

# Add the current directory to the path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_system_tray():
    """Test system tray integration"""
    app = QApplication(sys.argv)
    
    # Check if system tray is available
    from PyQt5.QtWidgets import QSystemTrayIcon
    if not QSystemTrayIcon.isSystemTrayAvailable():
        print("‚ùå System tray not available on this system")
        return
    
    from main import MilkMochaPet
    
    # Create the pet
    pet = MilkMochaPet()
    
    print("üîî Testing System Tray Integration")
    print("=" * 50)
    
    print("\n‚úÖ SYSTEM TRAY FEATURES:")
    print("‚Ä¢ Pet icon appears in system tray")
    print("‚Ä¢ Single-click: Shows notification")
    print("‚Ä¢ Double-click: Hide/Show pet")
    print("‚Ä¢ Right-click: Full context menu")
    print("‚Ä¢ Window close: Minimize to tray (not exit)")
    
    print("\nüéÆ SYSTEM TRAY MENU:")
    print("‚Ä¢ Hide/Show Pet - Toggle visibility")
    print("‚Ä¢ Quick Actions - Animation shortcuts")
    print("  - Dance, Laugh, Excited, Heart Throw")
    print("  - Playing Guitar, Greeting, Run Random, Sleep")
    print("‚Ä¢ Settings - Open settings window")
    print("‚Ä¢ About - Show information")
    print("‚Ä¢ Exit - Completely quit application")
    
    print("\n‚å®Ô∏è  KEYBOARD SHORTCUTS:")
    print("‚Ä¢ H: Hide/Show pet")
    print("‚Ä¢ ESC: Quit application")
    print("‚Ä¢ SPACE: Dance")
    print("‚Ä¢ P: Play guitar")
    print("‚Ä¢ Y: Says yes")
    print("‚Ä¢ R: Run to random location")
    print("‚Ä¢ S: Open settings")
    
    print("\nüß™ TESTING INSTRUCTIONS:")
    print("1. Look for pet icon in system tray")
    print("2. Single-click tray icon for notification")
    print("3. Double-click tray icon to hide/show pet")
    print("4. Right-click tray icon for menu")
    print("5. Try 'Hide Pet' from tray menu")
    print("6. Try 'Quick Actions' from tray menu")
    print("7. Close window (X) - should minimize to tray")
    print("8. Press H key to toggle visibility")
    print("9. Use 'Exit' from tray menu to quit")
    
    def demonstrate_tray_features():
        print("\nüé¨ DEMONSTRATION:")
        print("‚≠ê Watch the system tray notifications!")
        
        # Show initial notification
        QTimer.singleShot(2000, lambda: [
            print("üîî Showing welcome notification..."),
            pet.tray_icon.showMessage(
                "Milk Mocha Pet",
                "System tray integration active! Try the tray menu.",
                pet.tray_icon.Information,
                3000
            )
        ])
        
        # Hide pet after 5 seconds
        QTimer.singleShot(5000, lambda: [
            print("üëª Hiding pet to demonstrate tray functionality..."),
            pet.hide(),
            pet.show_hide_action.setText("Show Pet")
        ])
        
        # Show pet again after 8 seconds
        QTimer.singleShot(8000, lambda: [
            print("üëã Showing pet again..."),
            pet.show(),
            pet.show_hide_action.setText("Hide Pet")
        ])
        
        # Demo quick action from tray
        QTimer.singleShot(10000, lambda: [
            print("üé≠ Triggering dance from tray..."),
            pet.show_dancing()
        ])
        
        print("‚úÖ System tray integration ready!")
    
    demonstrate_tray_features()
    
    print("\nüéØ BENEFITS:")
    print("‚Ä¢ Pet can be hidden but still accessible")
    print("‚Ä¢ Quick access to all animations")
    print("‚Ä¢ System integration feels native")
    print("‚Ä¢ Closing window doesn't exit app")
    print("‚Ä¢ Full control from tray menu")
    
    print("\nüèÜ SYSTEM TRAY INTEGRATION COMPLETE!")
    print("Your pet now lives in the system tray!")
    
    # Run longer to test tray functionality
    return app.exec_()

if __name__ == "__main__":
    test_system_tray()
